{"version":3,"sources":["webpack:///./src/js/data/config.js","webpack:///./src/js/utils/detector.js","webpack:///./src/js/app/components/renderer.js","webpack:///./src/js/app/components/camera.js","webpack:///./src/js/app/components/light.js","webpack:///./src/js/app/components/controls.js","webpack:///./src/js/app/helpers/material.js","webpack:///./src/js/app/helpers/stats.js","webpack:///./src/js/app/helpers/geometry.js","webpack:///./src/js/utils/helpers.js","webpack:///./src/js/app/model/texture.js","webpack:///./src/js/app/helpers/meshHelper.js","webpack:///./src/js/app/model/model.js","webpack:///./src/js/utils/keyboard.js","webpack:///./src/js/app/managers/interaction.js","webpack:///./src/js/app/managers/datGUI.js","webpack:///./src/js/app/main.js","webpack:///./src/js/app.js"],"names":["isDev","isShowingStats","isLoaded","isTweening","isRotating","isMouseMoving","isMouseOver","maxAnisotropy","dpr","easing","TWEEN","Easing","Quadratic","InOut","duration","model","path","scale","texture","imageFiles","name","image","mesh","enableHelper","wireframe","translucent","material","color","emissive","fog","near","camera","fov","far","aspect","posX","posY","posZ","controls","autoRotate","autoRotateSpeed","rotateSpeed","zoomSpeed","minDistance","maxDistance","minPolarAngle","Math","PI","maxPolarAngle","minAzimuthAngle","Infinity","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","target","x","y","z","ambientLight","enabled","directionalLight","intensity","shadow","helperEnabled","bias","mapWidth","mapHeight","top","right","bottom","left","pointLight","distance","hemiLight","groundColor","canvas","window","CanvasRenderingContext2D","webgl","document","createElement","WebGLRenderingContext","getContext","e","workers","Worker","fileapi","File","FileReader","FileList","Blob","getWebGLErrorMessage","element","id","style","fontFamily","fontSize","fontWeight","textAlign","background","padding","width","margin","this","innerHTML","join","addGetWebGLMessage","parameters","parent","undefined","body","appendChild","Renderer","scene","container","threeRenderer","THREE","antialias","setClearColor","setPixelRatio","devicePixelRatio","domElement","shadowMap","type","Config","getMaxAnisotropy","updateSize","addEventListener","setSize","offsetWidth","offsetHeight","render","Camera","renderer","height","threeCamera","position","set","updateProjectionMatrix","Light","init","visible","castShadow","mapSize","directionalLightHelper","lightName","add","Controls","rotateStart","Vector2","rotateEnd","rotateDelta","PI_2","mouseDown","raycaster","Raycaster","mouse","bindEventListeners","onMouseDown","bind","onMouseUp","onMouseMove","onTouchMove","onTouchStart","onTouchEnd","evt","self","getCoordinates","preventDefault","setCursor","innerWidth","innerHeight","setFromCamera","clientX","clientY","subVectors","multiplyScalar","rotation","clientHeight","copy","max","min","targetTouches","pageX","changedTouches","length","pageY","cursorType","getElementsByTagName","cursor","Material","basic","side","standard","shading","roughness","metalness","wire","rS","bS","glS","tS","Geometry","geo","widthSegments","heightSegments","radius","receiveShadow","Stats","start","tick","frame","end","update","BrowserStats","glStats","threeStats","rStats","CSSPath","userTimingAPI","values","caption","over","average","avgMs","fps","below","calls","raf","rstats","groups","fractions","base","steps","plugins","Helpers","fn","threshhold","scope","last","deferTimer","context","now","Date","args","arguments","clearTimeout","setTimeout","apply","xhr","lengthComputable","percentComplete","loaded","total","console","log","round","error","value","replace","setHex","needsUpdate","geometry","vertexColors","verticesNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","materialKey","textures","key","Texture","loader","promiseArray","setPath","forEach","imageFile","push","Promise","resolve","reject","load","anisotropy","modelOBJ","logProgress","Error","all","then","i","Object","keys","reason","MeshHelper","wireLine","depthTest","opacity","transparent","edges","edgesLine","Model","manager","obj","traverse","child","map","UV","logError","ALIAS","Keyboard","keyCodes","event","onKeyChange","onBlur","removeEventListener","prop","keyCode","keyDesc","split","pressed","indexOf","toUpperCase","charCodeAt","aliases","aliasKeys","shiftKey","ctrlKey","altKey","metaKey","Interaction","timeout","keyboard","throttle","onMouseLeave","onMouseOver","repeat","eventMatches","DatGUI","main","gui","dat","GUI","threeControls","light","cameraFolder","addFolder","cameraFOVGui","onChange","enableRotate","onFinishChange","cameraAspectGui","addColor","cameraFogNearGui","density","controlsFolder","controlsAutoRotateSpeedGui","meshFolder","ambientLightFolder","directionalLightFolder","directionalLightIntensityGui","directionalLightPositionXGui","directionalLightPositionYGui","directionalLightPositionZGui","shadowFolder","shadowNearGui","dispose","shadowFarGui","shadowTopGui","shadowRightGui","shadowBottomGui","shadowLeftGui","shadowBiasGui","pointLightFolder","pointLightIntensityGui","pointLightDistanceGui","pointLightPositionXGui","pointLightPositionYGui","pointLightPositionZGui","hemiLightFolder","hemiLightIntensityGui","hemiLightPositionXGui","hemiLightPositionYGui","hemiLightPositionZGui","Main","clock","place","make","stats","setUp","onProgress","item","onLoad","querySelector","display","requestAnimationFrame","Detector","getElementById"],"mappings":"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","file":"0.app.js","sourcesContent":["import TWEEN from 'tween.js';\r\n\r\n// This object contains the state of the app\r\nexport default {\r\n  isDev: false,\r\n  isShowingStats: true,\r\n  isLoaded: false,\r\n  isTweening: false,\r\n  isRotating: true,\r\n  isMouseMoving: false,\r\n  isMouseOver: false,\r\n  maxAnisotropy: 1,\r\n  dpr: 1,\r\n  easing: TWEEN.Easing.Quadratic.InOut,\r\n  duration: 500,\r\n  model: {\r\n    path: './assets/models/Teapot.json',\r\n    scale: 20\r\n  },\r\n  texture: {\r\n    path: './assets/textures/',\r\n    imageFiles: [\r\n      {name: 'UV', image: 'UV_Grid_Sm.jpg'}\r\n    ]\r\n  },\r\n  mesh: {\r\n    enableHelper: false,\r\n    wireframe: false,\r\n    translucent: false,\r\n    material: {\r\n      color: 0xffffff,\r\n      emissive: 0xffffff\r\n    }\r\n  },\r\n  fog: {\r\n    color: 0xffffff,\r\n    near: 0.0008\r\n  },\r\n  camera: {\r\n    fov: 40,\r\n    near: 2,\r\n    far: 1000,\r\n    aspect: 1,\r\n    posX: 0,\r\n    posY: 30,\r\n    posZ: 40\r\n  },\r\n  controls: {\r\n    autoRotate: true,\r\n    autoRotateSpeed: -0.5,\r\n    rotateSpeed: 0.5,\r\n    zoomSpeed: 0.8,\r\n    minDistance: 200,\r\n    maxDistance: 600,\r\n    minPolarAngle: Math.PI / 5,\r\n    maxPolarAngle: Math.PI / 2,\r\n    minAzimuthAngle: -Infinity,\r\n    maxAzimuthAngle: Infinity,\r\n    enableDamping: true,\r\n    dampingFactor: 0.5,\r\n    enableZoom: true,\r\n    target: {\r\n      x: 0,\r\n      y: 0,\r\n      z: 0\r\n    }\r\n  },\r\n  ambientLight: {\r\n    enabled: true,\r\n    color: 0x141414\r\n  },\r\n  directionalLight: {\r\n    enabled: true,\r\n    color: 0xf0f0f0,\r\n    intensity: 0.4,\r\n    x: -75,\r\n    y: 280,\r\n    z: 150\r\n  },\r\n  shadow: {\r\n    enabled: true,\r\n    helperEnabled: true,\r\n    bias: 0,\r\n    mapWidth: 2048,\r\n    mapHeight: 2048,\r\n    near: 250,\r\n    far: 400,\r\n    top: 100,\r\n    right: 100,\r\n    bottom: -100,\r\n    left: -100\r\n  },\r\n  pointLight: {\r\n    enabled: true,\r\n    color: 0xffffff,\r\n    intensity: 0.34,\r\n    distance: 115,\r\n    x: 0,\r\n    y: 0,\r\n    z: 0\r\n  },\r\n  hemiLight: {\r\n    enabled: true,\r\n    color: 0xc8c8c8,\r\n    groundColor: 0xffffff,\r\n    intensity: 0.55,\r\n    x: 0,\r\n    y: 0,\r\n    z: 0\r\n  }\r\n};\r\n","/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mr.doob / http://mrdoob.com/\r\n */\r\n\r\nexport default {\r\n  canvas: !!window.CanvasRenderingContext2D,\r\n  webgl: (function() {\r\n    try {\r\n      var canvas = document.createElement('canvas');\r\n\r\n      return !!(window.WebGLRenderingContext && (canvas.getContext('webgl') || canvas.getContext('experimental-webgl')));\r\n    } catch(e) {\r\n      return false;\r\n    }\r\n  })(),\r\n\r\n  workers: !!window.Worker,\r\n  fileapi: window.File && window.FileReader && window.FileList && window.Blob,\r\n\r\n  getWebGLErrorMessage: function() {\r\n    var element = document.createElement('div');\r\n    element.id = 'webgl-error-message';\r\n    element.style.fontFamily = 'monospace';\r\n    element.style.fontSize = '13px';\r\n    element.style.fontWeight = 'normal';\r\n    element.style.textAlign = 'center';\r\n    element.style.background = '#fff';\r\n    element.style.color = '#000';\r\n    element.style.padding = '1.5em';\r\n    element.style.width = '400px';\r\n    element.style.margin = '5em auto 0';\r\n\r\n    if(!this.webgl) {\r\n      element.innerHTML = window.WebGLRenderingContext ? [\r\n        'Your graphics card does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000000\">WebGL</a>.<br />',\r\n        'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000000\">here</a>.'\r\n      ].join('\\n') : [\r\n        'Your browser does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000000\">WebGL</a>.<br/>',\r\n        'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000000\">here</a>.'\r\n      ].join('\\n');\r\n    }\r\n\r\n    return element;\r\n  },\r\n\r\n  addGetWebGLMessage: function(parameters) {\r\n    var parent, id, element;\r\n\r\n    parameters = parameters || {};\r\n\r\n    parent = parameters.parent !== undefined ? parameters.parent : document.body;\r\n    id = parameters.id !== undefined ? parameters.id : 'oldie';\r\n\r\n    element = this.getWebGLErrorMessage();\r\n    element.id = id;\r\n\r\n    parent.appendChild(element);\r\n  }\r\n};\r\n","import * as THREE from 'three';\r\n\r\nimport Config from '../../data/config';\r\n\r\n// Main webGL renderer class\r\nexport default class Renderer {\r\n  constructor(scene, container) {\r\n    // Properties\r\n    this.scene = scene;\r\n    this.container = container;\r\n\r\n    // Create WebGL renderer and set its antialias\r\n    this.threeRenderer = new THREE.WebGLRenderer({antialias: true});\r\n\r\n    // Set clear color to fog to enable fog or to hex color for no fog\r\n    this.threeRenderer.setClearColor(scene.fog.color);\r\n    this.threeRenderer.setPixelRatio(window.devicePixelRatio); // For retina\r\n\r\n    // Appends canvas\r\n    container.appendChild(this.threeRenderer.domElement);\r\n\r\n    // Shadow map options\r\n    this.threeRenderer.shadowMap.enabled = true;\r\n    this.threeRenderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n\r\n    // Get anisotropy for textures\r\n    Config.maxAnisotropy = this.threeRenderer.getMaxAnisotropy();\r\n\r\n    // Initial size update set to canvas container\r\n    this.updateSize();\r\n\r\n    // Listeners\r\n    document.addEventListener('DOMContentLoaded', () => this.updateSize(), false);\r\n    window.addEventListener('resize', () => this.updateSize(), false);\r\n  }\r\n\r\n  updateSize() {\r\n    this.threeRenderer.setSize(this.container.offsetWidth, this.container.offsetHeight);\r\n  }\r\n\r\n  render(scene, camera) {\r\n    // Renders scene to canvas target\r\n    this.threeRenderer.render(scene, camera);\r\n  }\r\n}\r\n","import * as THREE from 'three';\r\n\r\nimport Config from '../../data/config';\r\n\r\n// Class that creates and updates the main camera\r\nexport default class Camera {\r\n  constructor(renderer) {\r\n    const width = renderer.domElement.width;\r\n    const height = renderer.domElement.height;\r\n\r\n    // Create and position a Perspective Camera\r\n    this.threeCamera = new THREE.PerspectiveCamera(Config.camera.fov, width / height, Config.camera.near, Config.camera.far);\r\n    this.threeCamera.position.set(Config.camera.posX, Config.camera.posY, Config.camera.posZ);\r\n\r\n    // Initial sizing\r\n    this.updateSize(renderer);\r\n    \r\n    // Listeners\r\n    window.addEventListener('resize', () => this.updateSize(renderer), false);\r\n  }\r\n\r\n  updateSize(renderer) {\r\n    // Update camera aspect ratio with window aspect ratio\r\n    this.threeCamera.aspect = renderer.domElement.width / renderer.domElement.height;\r\n\r\n    // Always call updateProjectionMatrix on camera change\r\n    this.threeCamera.updateProjectionMatrix();\r\n  }\r\n}\r\n","import * as THREE from 'three';\r\n\r\nimport Config from '../../data/config';\r\n\r\n// Sets up and places all lights in scene\r\nexport default class Light {\r\n  constructor(scene) {\r\n    this.scene = scene;\r\n\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    // Ambient\r\n    this.ambientLight = new THREE.AmbientLight(Config.ambientLight.color);\r\n    this.ambientLight.visible = Config.ambientLight.enabled;\r\n\r\n    // Point light\r\n    this.pointLight = new THREE.PointLight(Config.pointLight.color, Config.pointLight.intensity, Config.pointLight.distance);\r\n    this.pointLight.position.set(Config.pointLight.x, Config.pointLight.y, Config.pointLight.z);\r\n    this.pointLight.visible = Config.pointLight.enabled;\r\n\r\n    // Directional light\r\n    this.directionalLight = new THREE.DirectionalLight(Config.directionalLight.color, Config.directionalLight.intensity);\r\n    this.directionalLight.position.set(Config.directionalLight.x, Config.directionalLight.y, Config.directionalLight.z);\r\n    this.directionalLight.visible = Config.directionalLight.enabled;\r\n\r\n    // Shadow map\r\n    this.directionalLight.castShadow = Config.shadow.enabled;\r\n    this.directionalLight.shadow.bias = Config.shadow.bias;\r\n    this.directionalLight.shadow.camera.near = Config.shadow.near;\r\n    this.directionalLight.shadow.camera.far = Config.shadow.far;\r\n    this.directionalLight.shadow.camera.left = Config.shadow.left;\r\n    this.directionalLight.shadow.camera.right = Config.shadow.right;\r\n    this.directionalLight.shadow.camera.top = Config.shadow.top;\r\n    this.directionalLight.shadow.camera.bottom = Config.shadow.bottom;\r\n    this.directionalLight.shadow.mapSize.width = Config.shadow.mapWidth;\r\n    this.directionalLight.shadow.mapSize.height = Config.shadow.mapHeight;\r\n\r\n    // Shadow camera helper\r\n    this.directionalLightHelper = new THREE.CameraHelper(this.directionalLight.shadow.camera);\r\n    this.directionalLightHelper.visible = Config.shadow.helperEnabled;\r\n\r\n    // Hemisphere light\r\n    this.hemiLight = new THREE.HemisphereLight(Config.hemiLight.color, Config.hemiLight.groundColor, Config.hemiLight.intensity);\r\n    this.hemiLight.position.set(Config.hemiLight.x, Config.hemiLight.y, Config.hemiLight.z);\r\n    this.hemiLight.visible = Config.hemiLight.enabled;\r\n  }\r\n\r\n  place(lightName) {\r\n    switch(lightName) {\r\n      case 'ambient':\r\n        this.scene.add(this.ambientLight);\r\n        break;\r\n\r\n      case 'directional':\r\n        this.scene.add(this.directionalLight);\r\n        this.scene.add(this.directionalLightHelper);\r\n        break;\r\n\r\n      case 'point':\r\n        this.scene.add(this.pointLight);\r\n        break;\r\n\r\n      case 'hemi':\r\n        this.scene.add(this.hemiLight);\r\n        break;\r\n    }\r\n  }\r\n}\r\n","import { Vector2, Raycaster } from \"three\";\r\nimport Config from \"../../data/config\";\r\n\r\n// Controls based on orbit controls\r\nexport default class Controls {\r\n  constructor(camera, container) {\r\n    // Orbit controls first needs to pass in THREE to constructor\r\n    this.camera = camera;\r\n    this.canvas = container;\r\n    this.rotateStart = new Vector2();\r\n    this.rotateEnd = new Vector2();\r\n    this.rotateDelta = new Vector2();\r\n    this.rotateSpeed = 0.25;\r\n    this.PI_2 = Math.PI / 2;\r\n    this.mouseDown = false;\r\n    this.raycaster = new Raycaster();\r\n    this.mouse = new Vector2();\r\n\r\n    // this.init();\r\n    this.bindEventListeners();\r\n  }\r\n\r\n  bindEventListeners() {\r\n    this.canvas.addEventListener(\"mousedown\", this.onMouseDown.bind(this));\r\n    this.canvas.addEventListener(\"mouseup\", this.onMouseUp.bind(this));\r\n    this.canvas.addEventListener(\"mousemove\", this.onMouseMove.bind(this));\r\n    this.canvas.addEventListener(\"touchmove\", this.onTouchMove.bind(this));\r\n    this.canvas.addEventListener(\"touchstart\", this.onTouchStart.bind(this));\r\n    this.canvas.addEventListener(\"touchend\", this.onTouchEnd.bind(this));\r\n  }\r\n\r\n  onMouseDown(evt) {\r\n    const self = this;\r\n\r\n    self.mouseDown = true;\r\n    const { x, y } = this.getCoordinates(evt);\r\n    evt.preventDefault();\r\n    self.setCursor(\"grab\");\r\n\r\n    self.rotateStart.set(x, y);\r\n\r\n    self.mouse.set(\r\n      (x / window.innerWidth) * 2 - 1,\r\n      -(y / window.innerHeight) * 2 + 1\r\n    );\r\n\r\n    self.raycaster.setFromCamera(self.mouse, self.camera);\r\n  }\r\n\r\n  onMouseUp(evt) {\r\n    const self = this;\r\n    self.mouseDown = false;\r\n    const { x, y } = self.getCoordinates(evt);\r\n    evt.preventDefault();\r\n    self.setCursor();\r\n  }\r\n\r\n  onMouseMove(evt) {\r\n    const self = this;\r\n\r\n    evt.preventDefault();\r\n\r\n    if (self.mouseDown) {\r\n      self.rotateEnd.set(evt.clientX, evt.clientY);\r\n\r\n      self.rotateDelta\r\n        .subVectors(self.rotateEnd, self.rotateStart)\r\n        .multiplyScalar(self.rotateSpeed);\r\n\r\n      self.camera.rotation.y -=\r\n        -(2 * Math.PI * self.rotateDelta.x) / self.canvas.clientHeight;\r\n      self.camera.rotation.x -=\r\n        -(2 * Math.PI * self.rotateDelta.y) / self.canvas.clientHeight;\r\n\r\n      self.rotateStart.copy(self.rotateEnd);\r\n\r\n      self.camera.rotation.x = Math.max(\r\n        -this.PI_2,\r\n        Math.min(this.PI_2, self.camera.rotation.x)\r\n      );\r\n    }\r\n  }\r\n\r\n  onTouchStart(evt) {}\r\n\r\n  onTouchEnd(evt) {}\r\n\r\n  onTouchMove(evt) {}\r\n\r\n  getCoordinates(evt) {\r\n    let x = evt.clientX\r\n      ? evt.clientX\r\n      : evt.targetTouches[0]\r\n      ? evt.targetTouches[0].pageX\r\n      : evt.changedTouches[evt.changedTouches.length - 1].pageX;\r\n    let y = evt.clientY\r\n      ? evt.clientY\r\n      : evt.targetTouches[0]\r\n      ? evt.targetTouches[0].pageY\r\n      : evt.changedTouches[evt.changedTouches.length - 1].pageY;\r\n\r\n    return { x, y };\r\n  }\r\n\r\n  setCursor(cursorType) {\r\n    const type = cursorType || \"default\";\r\n    document.getElementsByTagName(\"body\")[0].style.cursor = type;\r\n  }\r\n}\r\n","import * as THREE from 'three';\r\n\r\nimport Config from '../../data/config';\r\n\r\n// USe this class as a helper to set up some default materials\r\nexport default class Material {\r\n  constructor(color) {\r\n    this.basic = new THREE.MeshBasicMaterial({\r\n      color,\r\n      side: THREE.DoubleSide\r\n    });\r\n\r\n    this.standard = new THREE.MeshStandardMaterial({\r\n      color,\r\n      shading: THREE.FlatShading,\r\n      roughness: 1,\r\n      metalness: 0,\r\n      side: THREE.DoubleSide\r\n    });\r\n\r\n    this.wire = new THREE.MeshBasicMaterial({wireframe: true});\r\n  }\r\n}\r\n\r\n","// Local vars for rStats\r\nlet rS, bS, glS, tS;\r\n\r\nexport default class Stats {\r\n  constructor(renderer) {\r\n    this.renderer = renderer;\r\n  }\r\n\r\n  setUp() {\r\n    bS = new BrowserStats();\r\n    glS = new glStats();\r\n    tS = new threeStats(this.renderer.threeRenderer);\r\n\r\n    rS = new rStats({\r\n      CSSPath: './css/',\r\n      userTimingAPI: true,\r\n      values: {\r\n        frame: { caption: 'Total frame time (ms)', over: 16, average: true, avgMs: 100 },\r\n        fps: { caption: 'Framerate (FPS)', below: 30 },\r\n        calls: { caption: 'Calls (three.js)', over: 3000 },\r\n        raf: { caption: 'Time since last rAF (ms)', average: true, avgMs: 100 },\r\n        rstats: { caption: 'rStats update (ms)', average: true, avgMs: 100 },\r\n        texture: { caption: 'GenTex', average: true, avgMs: 100 }\r\n      },\r\n      groups: [\r\n        { caption: 'Framerate', values: ['fps', 'raf'] },\r\n        { caption: 'Frame Budget', values: ['frame', 'texture', 'setup', 'render'] }\r\n      ],\r\n      fractions: [\r\n        { base: 'frame', steps: ['texture', 'setup', 'render'] }\r\n      ],\r\n      plugins: [bS, tS, glS]\r\n    });\r\n  };\r\n\r\n  static start() {\r\n    rS('frame').start();\r\n    glS.start();\r\n\r\n    rS('rAF').tick();\r\n    rS('FPS').frame();\r\n\r\n    rS('render').start();\r\n  };\r\n\r\n  static end() {\r\n    rS('render').end(); // render finished\r\n    rS('frame').end(); // frame finished\r\n\r\n    // Local rStats update\r\n    rS('rStats').start();\r\n    rS().update();\r\n    rS('rStats').end();\r\n  };\r\n}\r\n","import * as THREE from 'three';\r\n\r\nimport Material from './material';\r\n\r\nimport Config from '../../data/config';\r\n\r\n// This helper class can be used to create and then place geometry in the scene\r\nexport default class Geometry {\r\n  constructor(scene) {\r\n    this.scene = scene;\r\n    this.geo = null;\r\n  }\r\n\r\n  make(type) {\r\n    if(type === 'plane') {\r\n      return (width, height, widthSegments = 1, heightSegments = 1) => {\r\n        this.geo = new THREE.PlaneGeometry(width, height, widthSegments, heightSegments);\r\n      };\r\n    }\r\n\r\n    if(type === 'sphere') {\r\n      return (radius, widthSegments = 32, heightSegments = 32) => {\r\n        this.geo = new THREE.SphereGeometry(radius, widthSegments, heightSegments);\r\n      };\r\n    }\r\n  }\r\n\r\n  place(position, rotation) {\r\n    const material = new Material(0xeeeeee).standard;\r\n    const mesh = new THREE.Mesh(this.geo, material);\r\n\r\n    // Use ES6 spread to set position and rotation from passed in array\r\n    mesh.position.set(...position);\r\n    mesh.rotation.set(...rotation);\r\n\r\n    if(Config.shadow.enabled) {\r\n      mesh.receiveShadow = true;\r\n    }\r\n\r\n    this.scene.add(mesh);\r\n  }\r\n}\r\n","// Provides simple static functions that are used multiple times in the app\r\nexport default class Helpers {\r\n  static throttle(fn, threshhold, scope) {\r\n    threshhold || (threshhold = 250);\r\n    let last, deferTimer;\r\n\r\n    return function() {\r\n      const context = scope || this;\r\n\r\n      const now  = +new Date,\r\n          args = arguments;\r\n\r\n      if(last && now < last + threshhold) {\r\n        clearTimeout(deferTimer);\r\n        deferTimer = setTimeout(function() {\r\n          last = now;\r\n          fn.apply(context, args);\r\n        }, threshhold);\r\n      }\r\n      else {\r\n        last = now;\r\n        fn.apply(context, args);\r\n      }\r\n    };\r\n  }\r\n\r\n  static logProgress() {\r\n    return function(xhr) {\r\n      if(xhr.lengthComputable) {\r\n        const percentComplete = xhr.loaded / xhr.total * 100;\r\n\r\n        console.log(Math.round(percentComplete, 2) + '% downloaded');\r\n      }\r\n    }\r\n  }\r\n\r\n  static logError() {\r\n    return function(xhr) {\r\n      console.error(xhr);\r\n    }\r\n  }\r\n\r\n  static handleColorChange(color) {\r\n    return (value) => {\r\n      if(typeof value === 'string') {\r\n        value = value.replace('#', '0x');\r\n      }\r\n\r\n      color.setHex(value);\r\n    };\r\n  }\r\n\r\n  static update(mesh) {\r\n    this.needsUpdate(mesh.material, mesh.geometry);\r\n  }\r\n\r\n  static needsUpdate(material, geometry) {\r\n    return function() {\r\n      material.shading = +material.shading; //Ensure number\r\n      material.vertexColors = +material.vertexColors; //Ensure number\r\n      material.side = +material.side; //Ensure number\r\n      material.needsUpdate = true;\r\n      geometry.verticesNeedUpdate = true;\r\n      geometry.normalsNeedUpdate = true;\r\n      geometry.colorsNeedUpdate = true;\r\n    };\r\n  }\r\n\r\n  static updateTexture(material, materialKey, textures) {\r\n    return function(key) {\r\n      material[materialKey] = textures[key];\r\n      material.needsUpdate = true;\r\n    };\r\n  }\r\n}\r\n","import * as THREE from 'three';\r\n// Promise polyfill for IE\r\nimport { Promise } from 'es6-promise';\r\n\r\nimport Helpers from '../../utils/helpers';\r\nimport Config from '../../data/config';\r\n\r\n// This class preloads all textures in the imageFiles array in the Config via ES6 Promises.\r\n// Once all textures are done loading the model itself will be loaded after the Promise .then() callback.\r\n// Using promises to preload textures prevents issues when applying textures to materials\r\n// before the textures have loaded.\r\nexport default class Texture {\r\n  constructor() {\r\n    // Prop that will contain all loaded textures\r\n    this.textures = {};\r\n  }\r\n\r\n  load() {\r\n    const loader = new THREE.TextureLoader();\r\n    const maxAnisotropy = Config.maxAnisotropy;\r\n    const imageFiles = Config.texture.imageFiles;\r\n    const promiseArray = [];\r\n\r\n    loader.setPath(Config.texture.path);\r\n\r\n    imageFiles.forEach(imageFile => {\r\n      // Add an individual Promise for each image in array\r\n      promiseArray.push(new Promise((resolve, reject) => {\r\n        // Each Promise will attempt to load the image file\r\n        loader.load(imageFile.image,\r\n          // This gets called on load with the loaded texture\r\n          texture => {\r\n            texture.anisotropy = maxAnisotropy;\r\n\r\n            // Resolve Promise with object of texture if it is instance of THREE.Texture\r\n            const modelOBJ = {};\r\n            modelOBJ[imageFile.name] = texture;\r\n            if(modelOBJ[imageFile.name] instanceof THREE.Texture)\r\n              resolve(modelOBJ);\r\n          },\r\n          Helpers.logProgress(),\r\n          xhr => reject(new Error(xhr + 'An error occurred loading while loading ' + imageFile.image))\r\n        )\r\n      }));\r\n    });\r\n\r\n    // Iterate through all Promises in array and return another Promise when all have resolved or console log reason when any reject\r\n    return Promise.all(promiseArray).then(textures => {\r\n      // Set the textures prop object to have name be the resolved texture\r\n      for(let i = 0; i < textures.length; i++) {\r\n        this.textures[Object.keys(textures[i])[0]] = textures[i][Object.keys(textures[i])[0]];\r\n      }\r\n    }, reason => console.log(reason));\r\n  }\r\n}\r\n","import * as THREE from 'three';\r\n\r\n// Simple mesh helper that shows edges, wireframes, and face and vertex normals\r\nexport default class MeshHelper {\r\n  constructor(scene, mesh) {\r\n    const wireframe = new THREE.WireframeGeometry(mesh.geometry);\r\n    const wireLine = new THREE.LineSegments(wireframe);\r\n    wireLine.material.depthTest = false;\r\n    wireLine.material.opacity = 0.25;\r\n    wireLine.material.transparent = true;\r\n    mesh.add(wireLine);\r\n\r\n    const edges = new THREE.EdgesGeometry(mesh.geometry);\r\n    const edgesLine = new THREE.LineSegments(edges);\r\n    edgesLine.material.depthTest = false;\r\n    edgesLine.material.opacity = 0.25;\r\n    edgesLine.material.transparent = true;\r\n    mesh.add(edgesLine);\r\n\r\n    scene.add(new THREE.BoxHelper(mesh));\r\n    scene.add(new THREE.FaceNormalsHelper(mesh, 2));\r\n    scene.add(new THREE.VertexNormalsHelper(mesh, 2));\r\n  }\r\n}\r\n","import * as THREE from 'three';\r\n\r\nimport Material from '../helpers/material';\r\nimport MeshHelper from '../helpers/meshHelper';\r\nimport Helpers from '../../utils/helpers';\r\nimport Config from '../../data/config';\r\n\r\n// Loads in a single object from the config file\r\nexport default class Model {\r\n  constructor(scene, manager, textures) {\r\n    this.scene = scene;\r\n    this.textures = textures;\r\n\r\n    // Manager is passed in to loader to determine when loading done in main\r\n    this.loader = new THREE.ObjectLoader(manager);\r\n    this.obj = null;\r\n  }\r\n\r\n  load() {\r\n    // Load model with ObjectLoader\r\n    this.loader.load(\r\n      Config.model.path,\r\n      obj => {\r\n        obj.traverse(child => {\r\n          if(child instanceof THREE.Mesh) {\r\n            // Create material for mesh and set its map to texture by name from preloaded textures\r\n            const material = new Material(0xffffff).standard;\r\n            material.map = this.textures.UV;\r\n            child.material = material;\r\n\r\n            // Set to cast and receive shadow if enabled\r\n            if(Config.shadow.enabled) {\r\n              child.receiveShadow = true;\r\n              child.castShadow = true;\r\n            }\r\n          }\r\n        });\r\n\r\n        // Add mesh helper if Dev\r\n        if(Config.isDev && Config.mesh.enableHelper) {\r\n          new MeshHelper(this.scene, obj);\r\n        }\r\n\r\n        // Set prop to obj so it can be accessed from outside the class\r\n        this.obj = obj;\r\n\r\n        obj.scale.multiplyScalar(Config.model.scale);\r\n        this.scene.add(obj);\r\n      },\r\n      Helpers.logProgress(),\r\n      Helpers.logError()\r\n    );\r\n  }\r\n}\r\n","const ALIAS = {\r\n  'left'\t\t: 37,\r\n  'up'\t\t  : 38,\r\n  'right'\t\t: 39,\r\n  'down'\t\t: 40,\r\n  'space'\t\t: 32,\r\n  'tab'\t\t  : 9,\r\n  'escape'\t: 27\r\n};\r\n\r\nexport default class Keyboard {\r\n  constructor(domElement) {\r\n    this.domElement = domElement || document;\r\n    this.keyCodes = {};\r\n\r\n    // bind keyEvents\r\n    this.domElement.addEventListener('keydown', (event) => this.onKeyChange(event), false);\r\n    this.domElement.addEventListener('keyup', (event) => this.onKeyChange(event), false);\r\n\r\n    // bind window blur\r\n    window.addEventListener('blur', () => this.onBlur, false);\r\n  }\r\n\r\n  destroy() {\r\n    this.domElement.removeEventListener('keydown', (event) => this.onKeyChange(event), false);\r\n    this.domElement.removeEventListener('keyup', (event) => this.onKeyChange(event), false);\r\n\r\n    // unbind window blur event\r\n    window.removeEventListener('blur', () => this.onBlur, false);\r\n  }\r\n\r\n  onBlur() {\r\n    for(const prop in this.keyCodes)\r\n      this.keyCodes[prop] = false;\r\n  }\r\n\r\n  onKeyChange(event) {\r\n    // log to debug\r\n    //console.log('onKeyChange', event, event.keyCode, event.shiftKey, event.ctrlKey, event.altKey, event.metaKey)\r\n\r\n    // update this.keyCodes\r\n    const keyCode = event.keyCode;\r\n    this.keyCodes[keyCode] = event.type === 'keydown';\r\n  }\r\n\r\n  pressed(keyDesc) {\r\n    const keys = keyDesc.split('+');\r\n    for(let i = 0; i < keys.length; i++) {\r\n      const key = keys[i];\r\n      let pressed = false;\r\n      if(Object.keys(ALIAS).indexOf(key) != -1) {\r\n        pressed = this.keyCodes[ALIAS[key]];\r\n      } else {\r\n        pressed = this.keyCodes[key.toUpperCase().charCodeAt(0)];\r\n      }\r\n      if(!pressed)\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  eventMatches(event, keyDesc) {\r\n    const aliases = ALIAS;\r\n    const aliasKeys = Object.keys(aliases);\r\n    const keys = keyDesc.split('+');\r\n    // log to debug\r\n    // console.log('eventMatches', event, event.keyCode, event.shiftKey, event.ctrlKey, event.altKey, event.metaKey)\r\n    for(let i = 0; i < keys.length; i++) {\r\n      const key = keys[i];\r\n      let pressed = false;\r\n      if(key === 'shift') {\r\n        pressed = event.shiftKey ? true : false;\r\n      } else if(key === 'ctrl') {\r\n        pressed = event.ctrlKey ? true : false;\r\n      } else if(key === 'alt') {\r\n        pressed = event.altKey ? true : false;\r\n      } else if(key === 'meta') {\r\n        pressed = event.metaKey ? true : false;\r\n      } else if(aliasKeys.indexOf(key) !== -1) {\r\n        pressed = event.keyCode === aliases[key];\r\n      } else if(event.keyCode === key.toUpperCase().charCodeAt(0)) {\r\n        pressed = true;\r\n      }\r\n      if(!pressed)\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n","import Keyboard from '../../utils/keyboard';\r\nimport Helpers from '../../utils/helpers';\r\nimport Config from '../../data/config';\r\n\r\n// Manages all input interactions\r\nexport default class Interaction {\r\n  constructor(renderer, scene, camera, controls) {\r\n    // Properties\r\n    this.renderer = renderer;\r\n    this.scene = scene;\r\n    this.camera = camera;\r\n    this.controls = controls;\r\n\r\n    this.timeout = null;\r\n\r\n    // Instantiate keyboard helper\r\n    this.keyboard = new Keyboard();\r\n\r\n    // Listeners\r\n    // Mouse events\r\n    this.renderer.domElement.addEventListener('mousemove', (event) => Helpers.throttle(this.onMouseMove(event), 250), false);\r\n    this.renderer.domElement.addEventListener('mouseleave', (event) => this.onMouseLeave(event), false);\r\n    this.renderer.domElement.addEventListener('mouseover', (event) => this.onMouseOver(event), false);\r\n\r\n    // Keyboard events\r\n    this.keyboard.domElement.addEventListener('keydown', (event) => {\r\n      // Only once\r\n      if(event.repeat) {\r\n        return;\r\n      }\r\n\r\n      if(this.keyboard.eventMatches(event, 'escape')) {\r\n        console.log('Escape pressed');\r\n      }\r\n    });\r\n  }\r\n\r\n  onMouseOver(event) {\r\n    event.preventDefault();\r\n\r\n    Config.isMouseOver = true;\r\n  }\r\n\r\n  onMouseLeave(event) {\r\n    event.preventDefault();\r\n\r\n    Config.isMouseOver = false;\r\n  }\r\n\r\n  onMouseMove(event) {\r\n    event.preventDefault();\r\n\r\n    clearTimeout(this.timeout);\r\n\r\n    this.timeout = setTimeout(function() {\r\n      Config.isMouseMoving = false;\r\n    }, 200);\r\n\r\n    Config.isMouseMoving = true;\r\n  }\r\n}\r\n","import Config from '../../data/config';\r\n\r\n// Manages all dat.GUI interactions\r\nexport default class DatGUI {\r\n  constructor(main, mesh) {\r\n    const gui = new dat.GUI();\r\n\r\n    this.camera = main.camera.threeCamera;\r\n    this.controls = main.controls.threeControls;\r\n    this.light = main.light;\r\n\r\n    /* Global */\r\n    //gui.close();\r\n\r\n    /* Camera */\r\n    const cameraFolder = gui.addFolder('Camera');\r\n    const cameraFOVGui = cameraFolder.add(Config.camera, 'fov', 0, 180).name('Camera FOV');\r\n    cameraFOVGui.onChange((value) => {\r\n      this.controls.enableRotate = false;\r\n\r\n      this.camera.fov = value;\r\n    });\r\n    cameraFOVGui.onFinishChange(() => {\r\n      this.camera.updateProjectionMatrix();\r\n\r\n      this.controls.enableRotate = true;\r\n    });\r\n    const cameraAspectGui = cameraFolder.add(Config.camera, 'aspect', 0, 4).name('Camera Aspect');\r\n    cameraAspectGui.onChange((value) => {\r\n      this.controls.enableRotate = false;\r\n\r\n      this.camera.aspect = value;\r\n    });\r\n    cameraAspectGui.onFinishChange(() => {\r\n      this.camera.updateProjectionMatrix();\r\n\r\n      this.controls.enableRotate = true;\r\n    });\r\n    const cameraFogColorGui = cameraFolder.addColor(Config.fog, 'color').name('Fog Color');\r\n    cameraFogColorGui.onChange((value) => {\r\n      main.scene.fog.color.setHex(value);\r\n    });\r\n    const cameraFogNearGui = cameraFolder.add(Config.fog, 'near', 0.000, 0.010).name('Fog Near');\r\n    cameraFogNearGui.onChange((value) => {\r\n      this.controls.enableRotate = false;\r\n\r\n      main.scene.fog.density = value;\r\n    });\r\n    cameraFogNearGui.onFinishChange(() => {\r\n      this.controls.enableRotate = true;\r\n    });\r\n\r\n\r\n    /* Controls */\r\n    const controlsFolder = gui.addFolder('Controls');\r\n    controlsFolder.add(Config.controls, 'autoRotate').name('Auto Rotate').onChange((value) => {\r\n      this.controls.autoRotate = value;\r\n    });\r\n    const controlsAutoRotateSpeedGui = controlsFolder.add(Config.controls, 'autoRotateSpeed', -1, 1).name('Rotation Speed');\r\n    controlsAutoRotateSpeedGui.onChange((value) => {\r\n      this.controls.enableRotate = false;\r\n      this.controls.autoRotateSpeed = value;\r\n    });\r\n    controlsAutoRotateSpeedGui.onFinishChange(() => {\r\n      this.controls.enableRotate = true;\r\n    });\r\n\r\n\r\n    /* Mesh */\r\n    const meshFolder = gui.addFolder('Mesh');\r\n    meshFolder.add(Config.mesh, 'translucent', true).name('Translucent').onChange((value) => {\r\n      if(value) {\r\n        mesh.material.transparent = true;\r\n        mesh.material.opacity = 0.5;\r\n      } else {\r\n        mesh.material.opacity = 1.0;\r\n      }\r\n    });\r\n    meshFolder.add(Config.mesh, 'wireframe', true).name('Wireframe').onChange((value) => {\r\n      mesh.material.wireframe = value;\r\n    });\r\n\r\n\r\n    /* Lights */\r\n    // Ambient Light\r\n    const ambientLightFolder = gui.addFolder('Ambient Light');\r\n    ambientLightFolder.add(Config.ambientLight, 'enabled').name('Enabled').onChange((value) => {\r\n      this.light.ambientLight.visible = value;\r\n    });\r\n    ambientLightFolder.addColor(Config.ambientLight, 'color').name('Color').onChange((value) => {\r\n      this.light.ambientLight.color.setHex(value);\r\n    });\r\n\r\n\r\n    // Directional Light\r\n    const directionalLightFolder = gui.addFolder('Directional Light');\r\n    directionalLightFolder.add(Config.directionalLight, 'enabled').name('Enabled').onChange((value) => {\r\n      this.light.directionalLight.visible = value;\r\n    });\r\n    directionalLightFolder.addColor(Config.directionalLight, 'color').name('Color').onChange((value) => {\r\n      this.light.directionalLight.color.setHex(value);\r\n    });\r\n    const directionalLightIntensityGui = directionalLightFolder.add(Config.directionalLight, 'intensity', 0, 2).name('Intensity');\r\n    directionalLightIntensityGui.onChange((value) => {\r\n      this.controls.enableRotate = false;\r\n\r\n      this.light.directionalLight.intensity = value;\r\n    });\r\n    directionalLightIntensityGui.onFinishChange(() => {\r\n      this.controls.enableRotate = true;\r\n    });\r\n    const directionalLightPositionXGui = directionalLightFolder.add(Config.directionalLight, 'x', -1000, 1000).name('Position X');\r\n    directionalLightPositionXGui.onChange((value) => {\r\n      this.controls.enableRotate = false;\r\n\r\n      this.light.directionalLight.position.x = value;\r\n    });\r\n    directionalLightPositionXGui.onFinishChange(() => {\r\n      this.controls.enableRotate = true;\r\n    });\r\n    const directionalLightPositionYGui = directionalLightFolder.add(Config.directionalLight, 'y', -1000, 1000).name('Position Y');\r\n    directionalLightPositionYGui.onChange((value) => {\r\n      this.controls.enableRotate = false;\r\n\r\n      this.light.directionalLight.position.y = value;\r\n    });\r\n    directionalLightPositionYGui.onFinishChange(() => {\r\n      this.controls.enableRotate = true;\r\n    });\r\n    const directionalLightPositionZGui = directionalLightFolder.add(Config.directionalLight, 'z', -1000, 1000).name('Position Z');\r\n    directionalLightPositionZGui.onChange((value) => {\r\n      this.controls.enableRotate = false;\r\n\r\n      this.light.directionalLight.position.z = value;\r\n    });\r\n    directionalLightPositionZGui.onFinishChange(() => {\r\n      this.controls.enableRotate = true;\r\n    });\r\n\r\n    // Shadow Map\r\n    const shadowFolder = gui.addFolder('Shadow Map');\r\n    shadowFolder.add(Config.shadow, 'enabled').name('Enabled').onChange((value) => {\r\n      this.light.directionalLight.castShadow = value;\r\n    });\r\n    shadowFolder.add(Config.shadow, 'helperEnabled').name('Helper Enabled').onChange((value) => {\r\n      this.light.directionalLightHelper.visible = value;\r\n    });\r\n    const shadowNearGui = shadowFolder.add(Config.shadow, 'near', 0, 400).name('Near');\r\n    shadowNearGui.onChange((value) => {\r\n      this.controls.enableRotate = false;\r\n\r\n      this.light.directionalLight.shadow.camera.near = value;\r\n    });\r\n    shadowNearGui.onFinishChange(() => {\r\n      this.controls.enableRotate = true;\r\n      this.light.directionalLight.shadow.map.dispose();\r\n      this.light.directionalLight.shadow.map = null;\r\n      this.light.directionalLightHelper.update();\r\n    });\r\n    const shadowFarGui = shadowFolder.add(Config.shadow, 'far', 0, 1200).name('Far');\r\n    shadowFarGui.onChange((value) => {\r\n      this.controls.enableRotate = false;\r\n\r\n      this.light.directionalLight.shadow.camera.far = value;\r\n    });\r\n    shadowFarGui.onFinishChange(() => {\r\n      this.controls.enableRotate = true;\r\n      this.light.directionalLight.shadow.map.dispose();\r\n      this.light.directionalLight.shadow.map = null;\r\n      this.light.directionalLightHelper.update();\r\n    });\r\n    const shadowTopGui = shadowFolder.add(Config.shadow, 'top', -400, 400).name('Top');\r\n    shadowTopGui.onChange((value) => {\r\n      this.controls.enableRotate = false;\r\n\r\n      this.light.directionalLight.shadow.camera.top = value;\r\n    });\r\n    shadowTopGui.onFinishChange(() => {\r\n      this.controls.enableRotate = true;\r\n      this.light.directionalLight.shadow.map.dispose();\r\n      this.light.directionalLight.shadow.map = null;\r\n      this.light.directionalLightHelper.update();\r\n    });\r\n    const shadowRightGui = shadowFolder.add(Config.shadow, 'right', -400, 400).name('Right');\r\n    shadowRightGui.onChange((value) => {\r\n      this.controls.enableRotate = false;\r\n\r\n      this.light.directionalLight.shadow.camera.right = value;\r\n    });\r\n    shadowRightGui.onFinishChange(() => {\r\n      this.controls.enableRotate = true;\r\n      this.light.directionalLight.shadow.map.dispose();\r\n      this.light.directionalLight.shadow.map = null;\r\n      this.light.directionalLightHelper.update();\r\n    });\r\n    const shadowBottomGui = shadowFolder.add(Config.shadow, 'bottom', -400, 400).name('Bottom');\r\n    shadowBottomGui.onChange((value) => {\r\n      this.controls.enableRotate = false;\r\n\r\n      this.light.directionalLight.shadow.camera.bottom = value;\r\n    });\r\n    shadowBottomGui.onFinishChange(() => {\r\n      this.controls.enableRotate = true;\r\n      this.light.directionalLight.shadow.map.dispose();\r\n      this.light.directionalLight.shadow.map = null;\r\n      this.light.directionalLightHelper.update();\r\n    });\r\n    const shadowLeftGui = shadowFolder.add(Config.shadow, 'left', -400, 400).name('Left');\r\n    shadowLeftGui.onChange((value) => {\r\n      this.controls.enableRotate = false;\r\n\r\n      this.light.directionalLight.shadow.camera.left = value;\r\n    });\r\n    shadowLeftGui.onFinishChange(() => {\r\n      this.controls.enableRotate = true;\r\n      this.light.directionalLight.shadow.map.dispose();\r\n      this.light.directionalLight.shadow.map = null;\r\n      this.light.directionalLightHelper.update();\r\n    });\r\n    const shadowBiasGui = shadowFolder.add(Config.shadow, 'bias', -0.000010, 1).name('Bias');\r\n    shadowBiasGui.onChange((value) => {\r\n      this.controls.enableRotate = false;\r\n\r\n      this.light.directionalLight.shadow.bias = value;\r\n    });\r\n    shadowBiasGui.onFinishChange(() => {\r\n      this.controls.enableRotate = true;\r\n      this.light.directionalLight.shadow.map.dispose();\r\n      this.light.directionalLight.shadow.map = null;\r\n      this.light.directionalLightHelper.update();\r\n    });\r\n\r\n\r\n    // Point Light\r\n    const pointLightFolder = gui.addFolder('Point Light');\r\n    pointLightFolder.add(Config.pointLight, 'enabled').name('Enabled').onChange((value) => {\r\n      this.light.pointLight.visible = value;\r\n    });\r\n    pointLightFolder.addColor(Config.pointLight, 'color').name('Color').onChange((value) => {\r\n      this.light.pointLight.color.setHex(value);\r\n    });\r\n    const pointLightIntensityGui = pointLightFolder.add(Config.pointLight, 'intensity', 0, 2).name('Intensity');\r\n    pointLightIntensityGui.onChange((value) => {\r\n      this.controls.enableRotate = false;\r\n\r\n      this.light.pointLight.intensity = value;\r\n    });\r\n    pointLightIntensityGui.onFinishChange(() => {\r\n      this.controls.enableRotate = true;\r\n    });\r\n    const pointLightDistanceGui = pointLightFolder.add(Config.pointLight, 'distance', 0, 1000).name('Distance');\r\n    pointLightDistanceGui.onChange((value) => {\r\n      this.controls.enableRotate = false;\r\n\r\n      this.light.pointLight.distance = value;\r\n    });\r\n    pointLightDistanceGui.onFinishChange(() => {\r\n      this.controls.enableRotate = true;\r\n    });\r\n    const pointLightPositionXGui = pointLightFolder.add(Config.pointLight, 'x', -1000, 1000).name('Position X');\r\n    pointLightPositionXGui.onChange((value) => {\r\n      this.controls.enableRotate = false;\r\n\r\n      this.light.pointLight.position.x = value;\r\n    });\r\n    pointLightPositionXGui.onFinishChange(() => {\r\n      this.controls.enableRotate = true;\r\n    });\r\n    const pointLightPositionYGui = pointLightFolder.add(Config.pointLight, 'y', -1000, 1000).name('Position Y');\r\n    pointLightPositionYGui.onChange((value) => {\r\n      this.controls.enableRotate = false;\r\n\r\n      this.light.pointLight.position.y = value;\r\n    });\r\n    pointLightPositionYGui.onFinishChange(() => {\r\n      this.controls.enableRotate = true;\r\n    });\r\n    const pointLightPositionZGui = pointLightFolder.add(Config.pointLight, 'z', -1000, 1000).name('Position Z');\r\n    pointLightPositionZGui.onChange((value) => {\r\n      this.controls.enableRotate = false;\r\n\r\n      this.light.pointLight.position.z = value;\r\n    });\r\n    pointLightPositionZGui.onFinishChange(() => {\r\n      this.controls.enableRotate = true;\r\n    });\r\n\r\n\r\n    // Hemi Light\r\n    const hemiLightFolder = gui.addFolder('Hemi Light');\r\n    hemiLightFolder.add(Config.hemiLight, 'enabled').name('Enabled').onChange((value) => {\r\n      this.light.hemiLight.visible = value;\r\n    });\r\n    hemiLightFolder.addColor(Config.hemiLight, 'color').name('Color').onChange((value) => {\r\n      this.light.hemiLight.color.setHex(value);\r\n    });\r\n    hemiLightFolder.addColor(Config.hemiLight, 'groundColor').name('ground Color').onChange((value) => {\r\n      this.light.hemiLight.groundColor.setHex(value);\r\n    });\r\n    const hemiLightIntensityGui = hemiLightFolder.add(Config.hemiLight, 'intensity', 0, 2).name('Intensity');\r\n    hemiLightIntensityGui.onChange((value) => {\r\n      this.controls.enableRotate = false;\r\n\r\n      this.light.hemiLight.intensity = value;\r\n    });\r\n    hemiLightIntensityGui.onFinishChange(() => {\r\n      this.controls.enableRotate = true;\r\n    });\r\n    const hemiLightPositionXGui = hemiLightFolder.add(Config.hemiLight, 'x', -1000, 1000).name('Position X');\r\n    hemiLightPositionXGui.onChange((value) => {\r\n      this.controls.enableRotate = false;\r\n\r\n      this.light.hemiLight.position.x = value;\r\n    });\r\n    hemiLightPositionXGui.onFinishChange(() => {\r\n      this.controls.enableRotate = true;\r\n    });\r\n    const hemiLightPositionYGui = hemiLightFolder.add(Config.hemiLight, 'y', -500, 1000).name('Position Y');\r\n    hemiLightPositionYGui.onChange((value) => {\r\n      this.controls.enableRotate = false;\r\n\r\n      this.light.hemiLight.position.y = value;\r\n    });\r\n    hemiLightPositionYGui.onFinishChange(() => {\r\n      this.controls.enableRotate = true;\r\n    });\r\n    const hemiLightPositionZGui = hemiLightFolder.add(Config.hemiLight, 'z', -1000, 1000).name('Position Z');\r\n    hemiLightPositionZGui.onChange((value) => {\r\n      this.controls.enableRotate = false;\r\n\r\n      this.light.hemiLight.position.z = value;\r\n    });\r\n    hemiLightPositionZGui.onFinishChange(() => {\r\n      this.controls.enableRotate = true;\r\n    });\r\n  }\r\n}\r\n","// Global imports -\r\nimport * as THREE from \"three\";\r\nimport TWEEN from \"tween.js\";\r\n\r\n// Local imports -\r\n// Components\r\nimport Renderer from \"./components/renderer\";\r\nimport Camera from \"./components/camera\";\r\nimport Light from \"./components/light\";\r\nimport Controls from \"./components/controls\";\r\n\r\n// Helpers\r\nimport Geometry from \"./helpers/geometry\";\r\nimport Stats from \"./helpers/stats\";\r\n\r\n// Model\r\nimport Texture from \"./model/texture\";\r\nimport Model from \"./model/model\";\r\n\r\n// Managers\r\nimport Interaction from \"./managers/interaction\";\r\nimport DatGUI from \"./managers/datGUI\";\r\n\r\n// data\r\nimport Config from \"./../data/config\";\r\n// -- End of imports\r\n\r\n// This class instantiates and ties all of the components together, starts the loading process and renders the main loop\r\nexport default class Main {\r\n  constructor(container) {\r\n    // Set container property to container element\r\n    this.container = container;\r\n\r\n    // Start Three clock\r\n    this.clock = new THREE.Clock();\r\n\r\n    // Main scene creation\r\n    this.scene = new THREE.Scene();\r\n    this.scene.fog = new THREE.FogExp2(Config.fog.color, Config.fog.near);\r\n\r\n    // Get Device Pixel Ratio first for retina\r\n    if (window.devicePixelRatio) {\r\n      Config.dpr = window.devicePixelRatio;\r\n    }\r\n\r\n    // Main renderer constructor\r\n    this.renderer = new Renderer(this.scene, container);\r\n\r\n    // Components instantiations\r\n    this.camera = new Camera(this.renderer.threeRenderer);\r\n    this.controls = new Controls(this.camera.threeCamera, container);\r\n    this.light = new Light(this.scene);\r\n\r\n    // Create and place lights in scene\r\n    const lights = [\"ambient\", \"directional\", \"point\", \"hemi\"];\r\n    lights.forEach((light) => this.light.place(light));\r\n\r\n    // Create and place geo in scene\r\n    this.geometry = new Geometry(this.scene);\r\n    this.geometry.make(\"plane\")(150, 150, 10, 10);\r\n    this.geometry.place([0, -20, 0], [Math.PI / 2, 0, 0]);\r\n\r\n    // Set up rStats if dev environment\r\n    if (Config.isDev && Config.isShowingStats) {\r\n      this.stats = new Stats(this.renderer);\r\n      this.stats.setUp();\r\n    }\r\n\r\n    // Instantiate texture class\r\n    this.texture = new Texture();\r\n\r\n    // Start loading the textures and then go on to load the model after the texture Promises have resolved\r\n    this.texture.load().then(() => {\r\n      this.manager = new THREE.LoadingManager();\r\n\r\n      // Textures loaded, load model\r\n      this.model = new Model(this.scene, this.manager, this.texture.textures);\r\n      this.model.load();\r\n\r\n      // onProgress callback\r\n      this.manager.onProgress = (item, loaded, total) => {\r\n        console.log(`${item}: ${loaded} ${total}`);\r\n      };\r\n\r\n      // All loaders done now\r\n      this.manager.onLoad = () => {\r\n        // Set up interaction manager with the app now that the model is finished loading\r\n        new Interaction(\r\n          this.renderer.threeRenderer,\r\n          this.scene,\r\n          this.camera.threeCamera,\r\n          this.controls.threeControls\r\n        );\r\n\r\n        // Add dat.GUI controls if dev\r\n        if (Config.isDev) {\r\n          new DatGUI(this, this.model.obj);\r\n        }\r\n\r\n        // Everything is now fully loaded\r\n        Config.isLoaded = true;\r\n        this.container.querySelector(\"#loading\").style.display = \"none\";\r\n      };\r\n    });\r\n\r\n    // Start render which does not wait for model fully loaded\r\n    this.render();\r\n  }\r\n\r\n  render() {\r\n    // Render rStats if Dev\r\n    if (Config.isDev && Config.isShowingStats) {\r\n      Stats.start();\r\n    }\r\n\r\n    // Call render function and pass in created scene and camera\r\n    this.renderer.render(this.scene, this.camera.threeCamera);\r\n\r\n    // rStats has finished determining render call now\r\n    if (Config.isDev && Config.isShowingStats) {\r\n      Stats.end();\r\n    }\r\n\r\n    // Delta time is sometimes needed for certain updates\r\n    //const delta = this.clock.getDelta();\r\n\r\n    // Call any vendor or module frame updates here\r\n    TWEEN.update();\r\n    // this.controls.threeControls.update();\r\n\r\n    // RAF\r\n    requestAnimationFrame(this.render.bind(this)); // Bind the main class instead of window object\r\n  }\r\n}\r\n","import Config from './data/config';\r\nimport Detector from './utils/detector';\r\nimport Main from './app/main';\r\n\r\n// Styles\r\nimport './../css/app.scss';\r\n\r\n// Check environment and set the Config helper\r\nif(__ENV__ === 'dev') {\r\n  console.log('----- RUNNING IN DEV ENVIRONMENT! -----');\r\n\r\n  Config.isDev = true;\r\n}\r\n\r\nfunction init() {\r\n  // Check for webGL capabilities\r\n  if(!Detector.webgl) {\r\n    Detector.addGetWebGLMessage();\r\n  } else {\r\n    const container = document.getElementById('appContainer');\r\n    new Main(container);\r\n  }\r\n}\r\n\r\ninit();\r\n"],"sourceRoot":""}